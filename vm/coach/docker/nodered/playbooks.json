[
  {"id":"tab-coach-playbooks","type":"tab","label":"Coach Playbooks","disabled":false,"info":"HTTP endpoints to trigger playbook nudges without changing existing flows. Uses HA_* env vars. Reads YAML from /coach-configs/playbooks with fallback to static map."},

  {"id":"in-playbook-get","type":"http in","z":"tab-coach-playbooks","name":"GET /playbook/:name","url":"/playbook/:name","method":"get","upload":false,"swaggerDoc":"","x":150,"y":60,"wires":[["fn-resolve"]]},
  {"id":"in-playbook-post","type":"http in","z":"tab-coach-playbooks","name":"POST /playbook","url":"/playbook","method":"post","upload":false,"swaggerDoc":"","x":150,"y":100,"wires":[["json-post","fn-resolve"]]},
  {"id":"json-post","type":"json","z":"tab-coach-playbooks","name":"Parse JSON","property":"payload","action":"obj","pretty":false,"x":360,"y":100,"wires":[["fn-resolve"]]},

  {"id":"fn-resolve","type":"function","z":"tab-coach-playbooks","name":"Resolve name -> filename","func":"let name='';\nif (msg.req && msg.req.params && msg.req.params.name) { name = String(msg.req.params.name||''); }\nelse if (msg.payload && msg.payload.name) { name = String(msg.payload.name||''); }\nname = name.toLowerCase();\nmsg.pbname = name;\nmsg.filename = '/coach-configs/playbooks/' + name + '.yaml';\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":80,"wires":[["file-read"]]},

  {"id":"file-read","type":"file in","z":"tab-coach-playbooks","name":"Read YAML","filename":"","format":"utf8","chunk":false,"sendError":true,"encoding":"none","allProps":false,"x":800,"y":80,"wires":[["fn-parse-yaml-lite"]]},

  {"id":"fn-parse-yaml-lite","type":"function","z":"tab-coach-playbooks","name":"YAML-lite -> steps","func":"// Very simple YAML list extractor for keys: steps, end_ritual, interventions, rules\n// Falls back to static map if no list found.\nconst text = String(msg.payload||'');\nconst lines = text.split(/\r?\n/);\nconst keys = ['steps','end_ritual','interventions','rules'];\nlet current=null; let indent=null; let items=[]; let title=null;\nfor (let i=0;i<lines.length;i++){\n  const line = lines[i];\n  const mKey = line.match(/^([ \t]*)([a-zA-Z_]+):\s*$/);\n  if (mKey){\n    const k = mKey[2];\n    if (keys.includes(k)) { current=k; indent=mKey[1].length; items=[]; continue; } else { current=null; indent=null; }\n  }\n  if (current){\n    const re = new RegExp('^' + ' '.repeat(indent+2) + '-\\s*(.*)$');\n    const mItem = line.match(re);\n    if (mItem){ items.push(mItem[1].replace(/^\"|\"$/g,'')); }\n    else { const mLess = line.match(new RegExp('^' + ' '.repeat(indent) + '[^ ]')); if (mLess) { break; } }\n  }\n}\nif (!items || items.length===0){ msg.parsed=null; } else { msg.parsed={title: msg.pbname.replace(/_/g,' ').replace(/\b\w/g,c=>c.toUpperCase()), steps: items}; }\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1020,"y":80,"wires":[["switch-parsed"]]},

  {"id":"switch-parsed","type":"switch","z":"tab-coach-playbooks","name":"Parsed?","property":"parsed","propertyType":"msg","rules":[{"t":"nnull"}],"checkall":"true","repair":false,"outputs":1,"x":1220,"y":80,"wires":[["fn-build-ha-from-parsed"]]},

  {"id":"fn-build-ha-from-parsed","type":"function","z":"tab-coach-playbooks","name":"Build HA (parsed)","func":"const token = env.get('HA_TOKEN');\nconst base = env.get('HA_BASE_URL') || 'http://homeassistant:8123';\nlet svc = env.get('HA_NOTIFY_SERVICE') || 'mobile_app_masterblaster';\nsvc = String(svc).replace(/^notify\./,'');\nconst pb = msg.parsed;\nconst lines = '• ' + pb.steps.join('\\n• ');\nmsg.headers = { Authorization: 'Bearer ' + token, 'Content-Type': 'application/json' };\nmsg.url = `${base}/api/services/notify/${svc}`;\nmsg.method = 'POST';\nmsg.payload = { title: 'Coach – ' + pb.title, message: lines, data: { tag:'coach', importance:'high' } };\nmsg.playbook_response = { ok:true, name: msg.pbname, title: pb.title, steps: pb.steps };\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1440,"y":80,"wires":[["ha-playbook","ch-response","dbg-ha-playbook"]]},

  {"id":"fn-static-fallback","type":"function","z":"tab-coach-playbooks","name":"Static fallback","func":"const PB={\n  morning_boot:{title:'Morning Boot',steps:['Water + light exposure within 15 min of wake','Meds as scheduled (with/without food per rules)','Breakfast within 60 min of wake','Plan first deep-work block start time']},\n  deep_work_block:{title:'Deep Work – End Ritual',steps:['Save work, quick summary','Stand up, water, 60s breathing','Prepare next context']},\n  bedtime_winddown:{title:'Bedtime Wind-down',steps:['Dim lights','Breathing exercise 4-7-8 (2 min)','Set out morning clothes and pillbox']},\n  behind_move_pace:{title:'Behind Move Pace',steps:['7-min walk after next block','Protein-forward snack']},\n  low_restful_sleep:{title:'Low Restful Sleep – Today',steps:['Shorter work blocks (25 min)','No caffeine after 14:00','Wind-down lights at 21:15']}\n};\nconst token = env.get('HA_TOKEN');\nconst base = env.get('HA_BASE_URL') || 'http://homeassistant:8123';\nlet svc = env.get('HA_NOTIFY_SERVICE') || 'mobile_app_masterblaster';\nsvc = String(svc).replace(/^notify\./,'');\nconst pb = PB[msg.pbname];\nif (!pb){ if (msg.res){ msg.statusCode=404; msg.payload={ok:false,error:'unknown playbook',name:msg.pbname}; return [null, msg, null]; } return [null,null,null]; }\nconst lines='• ' + pb.steps.join('\\n• ');\nmsg.headers={ Authorization:'Bearer '+token,'Content-Type':'application/json'};\nmsg.url = `${base}/api/services/notify/${svc}`;\nmsg.method='POST';\nmsg.payload={ title:'Coach – '+pb.title, message: lines, data:{tag:'coach',importance:'high'}};\nmsg.playbook_response={ ok:true, name:msg.pbname, title:pb.title, steps:pb.steps };\nreturn [msg, null, msg.playbook_response];","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1040,"y":140,"wires":[["ha-playbook","dbg-ha-playbook"],["out-404"],["out-200-json"]]},

  {"id":"catch-read-error","type":"catch","z":"tab-coach-playbooks","name":"Catch file errors","scope":["file-read"],"uncaught":false,"x":820,"y":140,"wires":[["fn-static-fallback"]]},
  {"id":"status-no-parsed","type":"status","z":"tab-coach-playbooks","name":"No parsed -> fallback","scope":["switch-parsed"],"x":1230,"y":140,"wires":[["fn-static-fallback"]]},

  {"id":"ha-playbook","type":"http request","z":"tab-coach-playbooks","name":"HA notify REST (playbook)","method":"use","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":1680,"y":80,"wires":[["out-200-playbook"]]},
  {"id":"out-200-playbook","type":"http response","z":"tab-coach-playbooks","name":"200 OK","statusCode":"200","headers":{},"x":1890,"y":80,"wires":[]},
  {"id":"out-404","type":"http response","z":"tab-coach-playbooks","name":"404 Unknown","statusCode":"404","headers":{},"x":1260,"y":200,"wires":[]},
  {"id":"ch-response","type":"change","z":"tab-coach-playbooks","name":"Set JSON body","rules":[{"t":"set","p":"payload","pt":"msg","to":"msg.playbook_response","tot":"jsonata"}],"action":"replace","property":"payload","from":"","to":"","reg":false,"x":1680,"y":140,"wires":[["out-200-json"]]}
,
{"id":"out-200-json","type":"http response","z":"tab-coach-playbooks","name":"200 OK (JSON)","statusCode":"200","headers":{"Content-Type":"application/json"},"x":1890,"y":140,"wires":[]},
  {"id":"dbg-playbook","type":"debug","z":"tab-coach-playbooks","name":"Playbook req","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1710,"y":40,"wires":[]},
  {"id":"dbg-ha-playbook","type":"debug","z":"tab-coach-playbooks","name":"HA resp (playbook)","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1490,"y":40,"wires":[]}
]
