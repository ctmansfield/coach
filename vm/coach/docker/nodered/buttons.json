[
  {
    "id": "tab-coach-buttons",
    "type": "tab",
    "label": "Coach Quick Actions",
    "disabled": false,
    "info": "HTTP GET endpoints to trigger common TIMEBOX_END nudges without changing existing /events flow."
  },
  {
    "id": "get-quick-generic",
    "type": "http in",
    "z": "tab-coach-buttons",
    "name": "GET /coach/quick",
    "url": "/coach/quick",
    "method": "get",
    "upload": false,
    "swaggerDoc": "",
    "x": 140,
    "y": 80,
    "wires": [["fn-build-generic"]]
  },
  {
    "id": "fn-build-generic",
    "type": "function",
    "z": "tab-coach-buttons",
    "name": "Build HA request (generic)",
    "func": "const token = env.get('HA_TOKEN');\nconst svc = env.get('HA_NOTIFY_SERVICE') || 'mobile_app_masterblaster';\nconst base = env.get('HA_BASE_URL') || 'http://homeassistant:8123';\n\nconst next = (msg.req && msg.req.query && msg.req.query.next) || 'Next task';\n\nmsg.headers = {\n  Authorization: 'Bearer ' + token,\n  'Content-Type': 'application/json'\n};\nmsg.url = `${base}/api/services/notify/${svc}`;\nmsg.payload = {\n  title: 'Coach',\n  message: `Block complete. Switch to: ${next}.`,\n  data: { tag: 'coach', importance: 'high' }\n};\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 370,
    "y": 80,
    "wires": [["ha-call-generic","out-200-generic"]]
  },
  {
    "id": "ha-call-generic",
    "type": "http request",
    "z": "tab-coach-buttons",
    "name": "HA notify REST",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "",
    "tls": "",
    "persist": false,
    "proxy": "",
    "authType": "",
    "senderr": false,
    "x": 620,
    "y": 60,
    "wires": [["dbg-generic"]]
  },
  {
    "id": "out-200-generic",
    "type": "http response",
    "z": "tab-coach-buttons",
    "name": "200 OK",
    "statusCode": "200",
    "headers": {},
    "x": 620,
    "y": 100,
    "wires": []
  },
  {
    "id": "dbg-generic",
    "type": "debug",
    "z": "tab-coach-buttons",
    "name": "HA resp (generic)",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "x": 840,
    "y": 60,
    "wires": []
  },
  {
    "id": "get-quick-standwater",
    "type": "http in",
    "z": "tab-coach-buttons",
    "name": "GET /coach/quick/stand_water",
    "url": "/coach/quick/stand_water",
    "method": "get",
    "upload": false,
    "swaggerDoc": "",
    "x": 170,
    "y": 160,
    "wires": [["fn-standwater"]]
  },
  {
    "id": "fn-standwater",
    "type": "function",
    "z": "tab-coach-buttons",
    "name": "Build HA request (stand+water)",
    "func": "const token = env.get('HA_TOKEN');\nconst svc = env.get('HA_NOTIFY_SERVICE') || 'mobile_app_masterblaster';\nconst base = env.get('HA_BASE_URL') || 'http://homeassistant:8123';\n\nmsg.headers = { Authorization: 'Bearer ' + token, 'Content-Type': 'application/json' };\nmsg.url = `${base}/api/services/notify/${svc}`;\nmsg.payload = { title: 'Coach', message: 'Block complete. Switch to: Stand + water.', data: { tag: 'coach', importance: 'high' } };\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 440,
    "y": 160,
    "wires": [["ha-call-generic","out-200-standwater"]]
  },
  {
    "id": "out-200-standwater",
    "type": "http response",
    "z": "tab-coach-buttons",
    "name": "200 OK",
    "statusCode": "200",
    "headers": {},
    "x": 700,
    "y": 160,
    "wires": []
  },
  {
    "id": "get-quick-walk",
    "type": "http in",
    "z": "tab-coach-buttons",
    "name": "GET /coach/quick/walk_3min",
    "url": "/coach/quick/walk_3min",
    "method": "get",
    "upload": false,
    "swaggerDoc": "",
    "x": 170,
    "y": 200,
    "wires": [["fn-walk"]]
  },
  {
    "id": "fn-walk",
    "type": "function",
    "z": "tab-coach-buttons",
    "name": "Build HA request (walk 3 min)",
    "func": "const token = env.get('HA_TOKEN');\nconst svc = env.get('HA_NOTIFY_SERVICE') || 'mobile_app_masterblaster';\nconst base = env.get('HA_BASE_URL') || 'http://homeassistant:8123';\n\nmsg.headers = { Authorization: 'Bearer ' + token, 'Content-Type': 'application/json' };\nmsg.url = `${base}/api/services/notify/${svc}`;\nmsg.payload = { title: 'Coach', message: 'Block complete. Switch to: Walk outside 3 min.', data: { tag: 'coach', importance: 'high' } };\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 450,
    "y": 200,
    "wires": [["ha-call-generic","out-200-walk"]]
  },
  {
    "id": "out-200-walk",
    "type": "http response",
    "z": "tab-coach-buttons",
    "name": "200 OK",
    "statusCode": "200",
    "headers": {},
    "x": 700,
    "y": 200,
    "wires": []
  },
  {
    "id": "get-quick-flashcard",
    "type": "http in",
    "z": "tab-coach-buttons",
    "name": "GET /coach/quick/flashcard",
    "url": "/coach/quick/flashcard",
    "method": "get",
    "upload": false,
    "swaggerDoc": "",
    "x": 170,
    "y": 240,
    "wires": [["fn-flashcard"]]
  },
  {
    "id": "fn-flashcard",
    "type": "function",
    "z": "tab-coach-buttons",
    "name": "Build HA request (1 flashcard)",
    "func": "const token = env.get('HA_TOKEN');\nconst svc = env.get('HA_NOTIFY_SERVICE') || 'mobile_app_masterblaster';\nconst base = env.get('HA_BASE_URL') || 'http://homeassistant:8123';\n\nmsg.headers = { Authorization: 'Bearer ' + token, 'Content-Type': 'application/json' };\nmsg.url = `${base}/api/services/notify/${svc}`;\nmsg.payload = { title: 'Coach', message: 'Block complete. Switch to: 1 flashcard.', data: { tag: 'coach', importance: 'high' } };\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 440,
    "y": 240,
    "wires": [["ha-call-generic","out-200-flashcard"]]
  },
  {
    "id": "out-200-flashcard",
    "type": "http response",
    "z": "tab-coach-buttons",
    "name": "200 OK",
    "statusCode": "200",
    "headers": {},
    "x": 710,
    "y": 240,
    "wires": []
  }
]
